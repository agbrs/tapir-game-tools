---
source: crates/tapir-script/compiler/src/compile/optimisations/dead_code_elimination_visitor.rs
expression: script
input_file: crates/tapir-script/compiler/src/compile/optimisations/snapshot_tests/dead_code/loop_break_without_execution.tapir
---
Script(
  functions: [
    Function(
      name: "@toplevel",
      span: "[span]",
      statements: [
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "y",
            value: Expression(
              span: "[span]",
              kind: Integer(7),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: Loop(
            block: [
              Statement(
                span: "[span]",
                kind: If(
                  condition: Expression(
                    span: "[span]",
                    kind: Bool(true),
                    meta: "[meta]",
                  ),
                  true_block: [
                    Statement(
                      span: "[span]",
                      kind: Break,
                      meta: "[meta]",
                    ),
                  ],
                  false_block: [],
                ),
                meta: "[meta]",
              ),
              Statement(
                span: "[span]",
                kind: Assignment(
                  ident: "y",
                  value: Expression(
                    span: "[span]",
                    kind: Integer(3),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
            ],
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: Assignment(
            ident: "int_prop",
            value: Expression(
              span: "[span]",
              kind: Variable("y"),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
      ],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      modifiers: FunctionModifiers(
        is_event_handler: None,
      ),
    ),
  ],
)
