---
source: crates/tapir-script/compiler/src/compile/symtab_visitor.rs
expression: script
input_file: crates/tapir-script/compiler/src/compile/snapshot_tests/symtab_visitor/symbols_in_return_success.tapir
---
Script(
  functions: [
    Function(
      name: "@toplevel",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      modifiers: FunctionModifiers(
        is_event_handler: None,
      ),
      meta: {
        "compiler::ast::FunctionId": "FunctionId(0)",
      },
    ),
    Function(
      name: "my_function",
      span: "[span]",
      statements: [
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "x",
            value: Expression(
              span: "[span]",
              kind: Integer(5),
              meta: {},
            ),
          ),
          meta: {
            "compiler::ast::SymbolId": "SymbolId(3)",
          },
        ),
        Statement(
          span: "[span]",
          kind: Return(
            values: [
              Expression(
                span: "[span]",
                kind: BinaryOperation(
                  lhs: Expression(
                    span: "[span]",
                    kind: Variable("x"),
                    meta: {
                      "compiler::ast::SymbolId": "SymbolId(3)",
                    },
                  ),
                  operator: Add,
                  rhs: Expression(
                    span: "[span]",
                    kind: Variable("a"),
                    meta: {
                      "compiler::ast::SymbolId": "SymbolId(1)",
                    },
                  ),
                ),
                meta: {},
              ),
              Expression(
                span: "[span]",
                kind: BinaryOperation(
                  lhs: Expression(
                    span: "[span]",
                    kind: Variable("b"),
                    meta: {
                      "compiler::ast::SymbolId": "SymbolId(2)",
                    },
                  ),
                  operator: Add,
                  rhs: Expression(
                    span: "[span]",
                    kind: Integer(3),
                    meta: {},
                  ),
                ),
                meta: {},
              ),
            ],
          ),
          meta: {},
        ),
      ],
      arguments: [
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          name: Resolved(SymbolId(1)),
        ),
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
          name: Resolved(SymbolId(2)),
        ),
      ],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      modifiers: FunctionModifiers(
        is_event_handler: None,
      ),
      meta: {
        "compiler::ast::FunctionId": "FunctionId(1)",
      },
    ),
  ],
  extern_functions: [],
)
