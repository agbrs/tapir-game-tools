---
source: crates/tapir-script/compiler/src/compile/optimisations/dead_code_elimination_visitor.rs
expression: script
input_file: crates/tapir-script/compiler/src/compile/optimisations/snapshot_tests/dead_code/loop.tapir
---
Script(
  functions: [
    Function(
      name: "@toplevel",
      span: "[span]",
      statements: [
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "x",
            value: Expression(
              span: "[span]",
              kind: Integer(5),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "z",
            value: Expression(
              span: "[span]",
              kind: Integer(0),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: Loop(
            block: [
              Statement(
                span: "[span]",
                kind: Block(
                  block: [],
                ),
                meta: "[meta]",
              ),
              Statement(
                span: "[span]",
                kind: Assignment(
                  ident: "z",
                  value: Expression(
                    span: "[span]",
                    kind: Integer(2),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
              Statement(
                span: "[span]",
                kind: Assignment(
                  ident: "x",
                  value: Expression(
                    span: "[span]",
                    kind: BinaryOperation(
                      lhs: Expression(
                        span: "[span]",
                        kind: Variable("x"),
                        meta: "[meta]",
                      ),
                      operator: Add,
                      rhs: Expression(
                        span: "[span]",
                        kind: Integer(1),
                        meta: "[meta]",
                      ),
                    ),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
              Statement(
                span: "[span]",
                kind: If(
                  condition: Expression(
                    span: "[span]",
                    kind: BinaryOperation(
                      lhs: Expression(
                        span: "[span]",
                        kind: Variable("x"),
                        meta: "[meta]",
                      ),
                      operator: Gt,
                      rhs: Expression(
                        span: "[span]",
                        kind: Integer(10),
                        meta: "[meta]",
                      ),
                    ),
                    meta: "[meta]",
                  ),
                  true_block: [
                    Statement(
                      span: "[span]",
                      kind: Break,
                      meta: "[meta]",
                    ),
                  ],
                  false_block: [],
                ),
                meta: "[meta]",
              ),
            ],
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: Assignment(
            ident: "int_prop",
            value: Expression(
              span: "[span]",
              kind: Variable("z"),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
      ],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
  ],
)
