---
source: crates/tapir-script/compiler/src/grammar_test.rs
expression: ast
input_file: crates/tapir-script/compiler/src/snapshot_tests/grammar/functions.tapir
---
Script(
  functions: [
    Function(
      name: "@toplevel",
      span: "[span]",
      statements: [
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "x",
            value: Expression(
              span: "[span]",
              kind: Integer(3),
              meta: {},
            ),
          ),
          meta: {},
        ),
      ],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_with_no_args_or_return",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_with_an_arg_no_return",
      span: "[span]",
      statements: [],
      arguments: [
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          name: Unresolved("x"),
        ),
      ],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_with_no_args_one_return",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_with_no_args_multiple_returns",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_with_args_and_mulitple_returns",
      span: "[span]",
      statements: [],
      arguments: [
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          name: Unresolved("x"),
        ),
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
          name: Unresolved("y"),
        ),
      ],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_trailing_comma_in_args",
      span: "[span]",
      statements: [],
      arguments: [
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          name: Unresolved("x"),
        ),
        FunctionArgument(
          span: "[span]",
          t: TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
          name: Unresolved("y"),
        ),
      ],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_trailing_comma_in_return",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
          TypeWithLocation(
            t: Fix,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
    Function(
      name: "my_function_single_return_in_brackets",
      span: "[span]",
      statements: [],
      arguments: [],
      return_types: FunctionReturn(
        types: [
          TypeWithLocation(
            t: Int,
            span: "[span]",
          ),
        ],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
  ],
)
