---
source: crates/tapir-script/compiler/src/compile/optimisations/constant_propagation_visitor.rs
expression: script
input_file: crates/tapir-script/compiler/src/compile/optimisations/snapshot_tests/constant_propagation/if_poison.tapir
---
Script(
  functions: [
    Function(
      name: "@toplevel",
      span: "[span]",
      statements: [
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "x",
            value: Expression(
              span: "[span]",
              kind: Integer(5),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "p",
            value: Expression(
              span: "[span]",
              kind: Integer(9),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: If(
            condition: Expression(
              span: "[span]",
              kind: Bool(true),
              meta: "[meta]",
            ),
            true_block: [
              Statement(
                span: "[span]",
                kind: VariableDeclaration(
                  ident: "y",
                  value: Expression(
                    span: "[span]",
                    kind: Integer(5),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
              Statement(
                span: "[span]",
                kind: Assignment(
                  ident: "p",
                  value: Expression(
                    span: "[span]",
                    kind: Integer(5),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
            ],
            false_block: [
              Statement(
                span: "[span]",
                kind: Assignment(
                  ident: "p",
                  value: Expression(
                    span: "[span]",
                    kind: Integer(3),
                    meta: "[meta]",
                  ),
                ),
                meta: "[meta]",
              ),
            ],
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "z",
            value: Expression(
              span: "[span]",
              kind: Variable("p"),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
        Statement(
          span: "[span]",
          kind: VariableDeclaration(
            ident: "w",
            value: Expression(
              span: "[span]",
              kind: Integer(5),
              meta: "[meta]",
            ),
          ),
          meta: "[meta]",
        ),
      ],
      arguments: [],
      return_types: FunctionReturn(
        types: [],
        span: "[span]",
      ),
      is_event_handler: false,
    ),
  ],
)
